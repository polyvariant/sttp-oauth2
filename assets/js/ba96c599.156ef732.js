(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[261],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,h=m["".concat(l,".").concat(u)]||m[u]||s[u]||i;return n?r.createElement(h,o(o({ref:t},d),{},{components:n})):r.createElement(h,o({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7529:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return c},toc:function(){return l},default:function(){return d}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o={sidebar_position:6,description:"Caching"},c={unversionedId:"caching",id:"caching",isDocsHomePage:!1,title:"Caching",description:"Caching",source:"@site/../mdoc/target/mdoc/caching.md",sourceDirName:".",slug:"/caching",permalink:"/docs/caching",editUrl:"https://github.com/polyvariant/sttp-oauth2/edit/main/docs/caching.md",version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,description:"Caching"},sidebar:"tutorialSidebar",previous:{title:"Token introspection",permalink:"/docs/token-introspection"},next:{title:"Choosing JSON deserialisation module",permalink:"/docs/json-deserialisation"}},l=[],p={toc:l};function d(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The sttp-oauth2 library comes with ",(0,i.kt)("inlineCode",{parentName:"p"},"CachingAccessTokenProvider")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"CachingTokenIntrospection")," - interfaces that allow caching the responses provided by the OAuth2 provider. Both of those require an implementation of the ",(0,i.kt)("inlineCode",{parentName:"p"},"ExpiringCache")," algebra, defined as follows: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"trait ExpiringCache[F[_], K, V] {\n  def get(key: K): F[Option[V]]\n\n  def put(key: K, value: V, expirationTime: Instant): F[Unit]\n\n  def remove(key: K): F[Unit]\n}\n")),(0,i.kt)("p",null,"As the user of the library you can either choose to implement your own cache mechanism, or go for one of the provided:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Class"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Import module"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ZioRefExpiringCache")),(0,i.kt)("td",{parentName:"tr",align:null},"Simple ZIO Ref based implementation. Good enough for ",(0,i.kt)("inlineCode",{parentName:"td"},"CachingAccessTokenProvider"),", but  for ",(0,i.kt)("inlineCode",{parentName:"td"},"CachingTokenIntrospection")," it's recommended to use an instance which better handles memory (this instance does not periodically remove expired entries)"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"org.polyvariant" %% "sttp-oauth2-cache-zio" % "0.19.2"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"CatsRefExpiringCache")),(0,i.kt)("td",{parentName:"tr",align:null},"Simple Cats Effect 3 Ref based implementation. Good enough for ",(0,i.kt)("inlineCode",{parentName:"td"},"CachingAccessTokenProvider"),", but  for ",(0,i.kt)("inlineCode",{parentName:"td"},"CachingTokenIntrospection")," it's recommended to use an instance which better handles memory (this instance does not periodically remove expired entries)"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"org.polyvariant" %% "sttp-oauth2-cache-cats" % "0.19.2"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"CatsRefExpiringCache")),(0,i.kt)("td",{parentName:"tr",align:null},"Simple Cats Effect 2 Ref based implementation.  Good enough for ",(0,i.kt)("inlineCode",{parentName:"td"},"CachingAccessTokenProvider"),", but  for ",(0,i.kt)("inlineCode",{parentName:"td"},"CachingTokenIntrospection")," it's recommended to use an instance which better handles memory (this instance does not periodically remove expired entries)"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"org.polyvariant" %% "sttp-oauth2-cache-ce2" % "0.19.2"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ScalacacheExpiringCache")),(0,i.kt)("td",{parentName:"tr",align:null},"Implementation based on ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/cb372/scalacache"},"https://github.com/cb372/scalacache")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"org.polyvariant" %% "sttp-oauth2-cache-scalacache" % "0.19.2"'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"MonixFutureCache")),(0,i.kt)("td",{parentName:"tr",align:null},"Future based implementation powered by ",(0,i.kt)("a",{parentName:"td",href:"https://monix.io/"},"Monix")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},'"org.polyvariant" %% "sttp-oauth2-cache-future" % "0.19.2"'))))))}d.isMDXComponent=!0}}]);