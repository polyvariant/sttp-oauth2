(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[412],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4130:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),a={sidebar_position:7,description:"Choosing JSON deserialisation module"},s={unversionedId:"json-deserialisation",id:"json-deserialisation",isDocsHomePage:!1,title:"Choosing JSON deserialisation module",description:"Choosing JSON deserialisation module",source:"@site/../mdoc/target/mdoc/json-deserialisation.md",sourceDirName:".",slug:"/json-deserialisation",permalink:"/docs/json-deserialisation",editUrl:"https://github.com/polyvariant/sttp-oauth2/edit/main/docs/json-deserialisation.md",version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,description:"Choosing JSON deserialisation module"},sidebar:"tutorialSidebar",previous:{title:"Caching",permalink:"/docs/caching"},next:{title:"Migrating to newer versions",permalink:"/docs/migrating"}},c=[{value:"circe",id:"circe",children:[]},{value:"jsoniter-scala",id:"jsoniter-scala",children:[]}],l={toc:c};function p(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"JSON deserialisation has been decoupled from the core modules.\nThere are now a couple of options to choose from:"),(0,i.kt)("h2",{id:"circe"},"circe"),(0,i.kt)("p",null,"To use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/circe/circe"},"circe")," implementation\nadd the following module to your dependencies:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'"org.polyvariant" %% "sttp-oauth2-circe" % "0.19.2"\n')),(0,i.kt)("p",null,"Then import appropriate set of implicit instances:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"import org.polyvariant.sttp.oauth2.json.circe.instances._\n")),(0,i.kt)("h2",{id:"jsoniter-scala"},"jsoniter-scala"),(0,i.kt)("p",null,"To use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/plokhotnyuk/jsoniter-scala"},"jsoniter-scala")," implementation\nadd the following module to your dependencies:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'"org.polyvariant" %% "sttp-oauth2-jsoniter" % "0.19.2"\n')),(0,i.kt)("p",null,"Then import appropriate set of implicit instances:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},"import org.polyvariant.sttp.oauth2.json.jsoniter.instances._\n")))}p.isMDXComponent=!0}}]);